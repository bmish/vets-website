name: Deploy AAA FE Tools to dev

on: [push]

env:
  CHROMEDRIVER_FILEPATH: /usr/local/share/chrome_driver/chromedriver
  APP_NAME: aaa-fe-tools

jobs:
  build:
    name: Build
    runs-on: self-hosted

    env:
      NODE_EXTRA_CA_CERTS: /etc/ssl/certs/VA-Internal-S2-RCA1-v1.cer.pem

    strategy:
      fail-fast: true
      matrix:
        buildtype: [vagovdev]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Node version
        id: get-node-version
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.get-node-version.outputs.NODE_VERSION }}

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            .cache/yarn
            node_modules
          key: ${{ steps.get-node-version.outputs.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline
        env:
          YARN_CACHE_FOLDER: .cache/yarn

      - name: Build
        run: yarn build --verbose --buildtype=${{ matrix.buildtype }}
        timeout-minutes: 30

      - name: Compress and archive build
        run: tar -C build/${{ matrix.buildtype }}/generated -cjf ${{ env.APP_NAME }}.tar.bz2 ${{ env.APP_NAME }}.css ${{ env.APP_NAME }}.entry.js

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.APP_NAME }}.tar.bz2
          path: ${{ env.APP_NAME }}.tar.bz2
          retention-days: 1

  archive:
    name: Archive
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.APP_NAME }}.tar.bz2

      - name: Configure AWS credentials (1)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1

      - name: Get AWS IAM role
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /frontend-team/github-actions/parameters/AWS_FRONTEND_NONPROD_ROLE
          env_variable_name: AWS_FRONTEND_NONPROD_ROLE

      - name: Configure AWS Credentials (2)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1
          role-to-assume: ${{ env.AWS_FRONTEND_NONPROD_ROLE }}
          role-duration-seconds: 900
          role-session-name: vsp-frontendteam-githubaction

      - name: Upload build
        run: aws s3 sync ${{ env.APP_NAME }}.tar.bz2 s3://vetsgov-website-builds-s3-upload/isolated-deployments/$GITHUB_SHA/${{ matrix.buildtype }}/${{ env.APP_NAME }}.tar.bz2 --acl public-read --region us-gov-west-1

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: ${{ always() && github.ref == 'refs/heads/master' && needs.archive.result == 'success' }}
    needs: archive

    strategy:
      matrix:
        include:
          - environment: vagovdev
            bucket: dev-va-gov-assets
          # - environment: vagovstaging
          #   bucket: apps.staging.va.gov

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials (1)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1

      - name: Get AWS IAM role
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /frontend-team/github-actions/parameters/AWS_FRONTEND_NONPROD_ROLE
          env_variable_name: AWS_FRONTEND_NONPROD_ROLE

      - name: Configure AWS Credentials (2)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1
          role-to-assume: ${{ env.AWS_FRONTEND_NONPROD_ROLE }}
          role-duration-seconds: 900
          role-session-name: vsp-frontendteam-githubaction

      - name: Deploy
        run: mkdir {{ env.APP_NAME }}-deployment && tar -C ./{{ env.APP_NAME }}-deployment -xvf {{ env.APP_NAME }}.tar.bz2
        run: aws s3 sync ./{{ env.APP_NAME }}-deployment s3://${{ matrix.bucket }}/generated --acl public-read --region us-gov-west-1
        # run: ./script/github-actions/deploy.sh -s $SRC -d $DEST -v
        # env:
        #   SRC: s3://vetsgov-website-builds-s3-upload/application-build/${{ github.sha }}/${{ matrix.environment }}.tar.bz2
        #   DEST: s3://${{ matrix.bucket }}
